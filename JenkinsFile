pipeline { 
  agent any
  tools { 
    nodejs "node"
  }
  stages { 
    stage('clone repository') {
      steps { 
        git 'https://github.com/SamsonKalume/gallery.git'
      }
    }
    stage('Build the project') {
      steps { 
        sh 'npm install'
      }
    }
    stage('Run Tests') {
      steps { 
        sh 'npm test'
      }
    }
    stage('Deploy to Render') {
  steps {
    script {
      withCredentials([usernamePassword(credentialsId: 'render_login', usernameVariable: 'RENDER_EMAIL', passwordVariable: 'RENDER_PASSWORD')]) {
        def render = [:]
        render['sh'] = """
          render login --email ${env.RENDER_EMAIL} --password ${env.RENDER_PASSWORD}
          render service get --name ${env.RENDER_SERVICE_NAME} || render service create --name ${env.RENDER_SERVICE_NAME} --plan ${env.RENDER_PLAN} --region ${env.RENDER_REGION}
          render service env --name ${env.RENDER_SERVICE_NAME} --set ${env.RENDER_ENV_VARS}
          render service deploy --name ${env.RENDER_SERVICE_NAME} --branch ${env.GIT_BRANCH}
        """
        sh render
      }
    }
  }
}
  }
  post {
    success {
      slackSend color: 'good', message: 'Successfuly Deployed',tokenCredentialId:'tokencredentialid',channel: 'slacknotification'
    }
    failure {
      slackSend color: '#ff0000', message: "The Build has failed for stage: ${env.JOB_NAME} for build No: ${env.BUILD_NUMBER}",tokenCredentialId:'tokencredentialid',channel: 'slacknotification'
    }
  }
}


